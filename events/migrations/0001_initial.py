# Generated by Django 5.1.4 on 2025-01-23 17:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="SpecialCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("PwD", "PwD"),
                            ("BPL", "BPL"),
                            ("Not Distance Learning", "Not Distance Learning"),
                            ("Received Scholarship", "Received Scholarship"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PersonalInformation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("age", models.IntegerField()),
                ("dob", models.DateField()),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("Male", "Male"),
                            ("Female", "Female"),
                            ("Other", "Other"),
                        ],
                        max_length=10,
                    ),
                ),
                ("caste", models.CharField(blank=True, max_length=255, null=True)),
                ("religion", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "state",
                    models.CharField(
                        choices=[
                            ("Andhra Pradesh", "Andhra Pradesh"),
                            ("Arunachal Pradesh", "Arunachal Pradesh"),
                            ("Assam", "Assam"),
                            ("Bihar", "Bihar"),
                            ("Chhattisgarh", "Chhattisgarh"),
                            ("Goa", "Goa"),
                            ("Gujarat", "Gujarat"),
                            ("Haryana", "Haryana"),
                            ("Himachal Pradesh", "Himachal Pradesh"),
                            ("Jharkhand", "Jharkhand"),
                            ("Karnataka", "Karnataka"),
                            ("Kerala", "Kerala"),
                            ("Madhya Pradesh", "Madhya Pradesh"),
                            ("Maharashtra", "Maharashtra"),
                            ("Manipur", "Manipur"),
                            ("Meghalaya", "Meghalaya"),
                            ("Mizoram", "Mizoram"),
                            ("Nagaland", "Nagaland"),
                            ("Odisha", "Odisha"),
                            ("Punjab", "Punjab"),
                            ("Rajasthan", "Rajasthan"),
                            ("Sikkim", "Sikkim"),
                            ("Tamil Nadu", "Tamil Nadu"),
                            ("Telangana", "Telangana"),
                            ("Tripura", "Tripura"),
                            ("Uttar Pradesh", "Uttar Pradesh"),
                            ("Uttarakhand", "Uttarakhand"),
                            ("West Bengal", "West Bengal"),
                            (
                                "Andaman and Nicobar Islands",
                                "Andaman and Nicobar Islands",
                            ),
                            ("Chandigarh", "Chandigarh"),
                            (
                                "Dadra and Nagar Haveli and Daman and Diu",
                                "Dadra and Nagar Haveli and Daman and Diu",
                            ),
                            ("Delhi", "Delhi"),
                            ("Jammu and Kashmir", "Jammu and Kashmir"),
                            ("Ladakh", "Ladakh"),
                            ("Lakshadweep", "Lakshadweep"),
                            ("Puducherry", "Puducherry"),
                        ],
                        max_length=100,
                    ),
                ),
                ("nationality", models.CharField(default="Indian", max_length=100)),
                ("email", models.EmailField(max_length=254)),
                ("phone_number", models.CharField(max_length=15)),
                ("father_name", models.CharField(max_length=255)),
                (
                    "father_occupation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("mother_name", models.CharField(max_length=255)),
                (
                    "mother_occupation",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("annual_income", models.FloatField()),
                ("is_first_graduate", models.BooleanField()),
                ("tenth_school_name", models.CharField(max_length=255)),
                ("tenth_marks", models.FloatField()),
                (
                    "twelfth_school_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("twelfth_marks", models.FloatField(blank=True, null=True)),
                (
                    "twelfth_field",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Science", "Science"),
                            ("Commerce", "Commerce"),
                            ("Arts", "Arts"),
                            ("Other", "Other"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "ug_college_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("ug_degree", models.CharField(blank=True, max_length=255, null=True)),
                ("ug_branch", models.CharField(blank=True, max_length=255, null=True)),
                ("ug_percentage", models.FloatField(blank=True, null=True)),
                (
                    "pg_college_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("pg_degree", models.CharField(blank=True, max_length=255, null=True)),
                ("pg_branch", models.CharField(blank=True, max_length=255, null=True)),
                ("pg_percentage", models.FloatField(blank=True, null=True)),
                (
                    "diploma_institution_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "diploma_field",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("diploma_percentage", models.FloatField(blank=True, null=True)),
                ("is_distance_learning", models.BooleanField()),
                ("received_scholarship", models.BooleanField()),
                (
                    "current_qualification",
                    models.CharField(
                        choices=[
                            ("10", "10"),
                            ("12", "12"),
                            ("Diploma", "Diploma"),
                            ("UG", "UG"),
                            ("PG", "PG"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "special_condition",
                    models.ManyToManyField(
                        blank=True,
                        related_name="personal_information",
                        to="events.specialcondition",
                    ),
                ),
            ],
        ),
    ]
